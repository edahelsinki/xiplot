parcelRequire=function(e,r,t,n){var i,o="function"==typeof parcelRequire&&parcelRequire,u="function"==typeof require&&require;function f(t,n){if(!r[t]){if(!e[t]){var i="function"==typeof parcelRequire&&parcelRequire;if(!n&&i)return i(t,!0);if(o)return o(t,!0);if(u&&"string"==typeof t)return u(t);var c=new Error("Cannot find module '"+t+"'");throw c.code="MODULE_NOT_FOUND",c}p.resolve=function(r){return e[t][1][r]||r},p.cache={};var l=r[t]=new f.Module(t);e[t][0].call(l.exports,p,l,l.exports,this)}return r[t].exports;function p(e){return f(p.resolve(e))}}f.isParcelRequire=!0,f.Module=function(e){this.id=e,this.bundle=f,this.exports={}},f.modules=e,f.cache=r,f.parent=o,f.register=function(r,t){e[r]=[function(e,r){r.exports=t},{}]};for(var c=0;c<t.length;c++)try{f(t[c])}catch(e){i||(i=e)}if(t.length){var l=f(t[t.length-1]);"object"==typeof exports&&"undefined"!=typeof module?module.exports=l:"function"==typeof define&&define.amd?define(function(){return l}):n&&(this[n]=l)}if(parcelRequire=f,i)throw i;return f}({"ESIJ":[function(require,module,exports) {
window.dashApp='\nimport dashapp\n\nfrom dash_extensions.enrich import DashProxy, ServersideOutputTransform\n\nfrom dashapp.app import DashApp\nfrom dashapp.utils.store import ServerSideStoreBackend\n\napp = DashProxy(\n    "dashapp.app", suppress_callback_exceptions=True, compress=False, eager_loading=True,\n    transforms=[ServersideOutputTransform(\n        backend=ServerSideStoreBackend(), session_check=False, arg_check=False,\n    )],\n)\n\n\nimport pyodide\nimport shutil\n\nfrom pathlib import Path\n\nPath("data").mkdir(exist_ok=True, parents=True)\n\nfor dataset in [\n    "autompg-B.csv", "autompg.csv", "auto-mpg.csv",\n    "Wang-B.csv", "Wang-dataframe.csv",\n]:\n    with open(Path("data") / dataset, "w") as file:\n        shutil.copyfileobj(pyodide.http.open_url("data/" + dataset), file)\n\n\napp = DashApp(app=app, df_from_store=lambda df: df, df_to_store=lambda df: df).app\n\n# Dummy request to ensure the server is setup when we request the index\nwith app.server.app_context():\n    with app.server.test_client() as client:\n        client.get("_favicon.ico")\n';
},{}]},{},["ESIJ"], null)
//# sourceMappingURL=/dashapp.289e690e.js.map